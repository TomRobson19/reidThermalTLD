#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 0
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style agsm
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\headheight 2cm
\headsep 2cm
\footskip 1cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Logbook 4th Year
\end_layout

\begin_layout Section*
End of Third Year
\end_layout

\begin_layout Itemize
Using TLD to remove many steps from last year.
\end_layout

\begin_layout Itemize
First priority is to research and understand this, Toby has sent his lecture
 slides for this.
 
\end_layout

\begin_layout Itemize
TLD should work with any camera and any angle
\end_layout

\begin_layout Itemize
Should work with any targets (human and non human)
\end_layout

\begin_layout Itemize
Look up if anyone has used TLD for Re-ID in colour or thermal.
 
\end_layout

\begin_layout Section*
Summer Notes
\end_layout

\begin_layout Itemize
Want a bash script to cmake, make and run for different purposes (testing,
 single camera, multi camera, datasets etc) to improve usability from late
 year.
\end_layout

\begin_layout Itemize
Maybe have a command line parameter for starting frame and FPS for testing
 in specific situations
\end_layout

\begin_layout Itemize
Can I just reuse the related work section from last year and add the TLD
 paper?
\end_layout

\begin_layout Section*
Start of Code
\end_layout

\begin_layout Itemize
Have used old MoG and Cascade code, along with the OpenCV TLD implementation
 for a first pass.
\end_layout

\begin_layout Itemize
Currently only has one tracker, have read about Multitracker but not implemented
 yet.
 Have set up variables
\end_layout

\begin_layout Itemize
Currently very slow.
\end_layout

\begin_layout Itemize
Experimented with removing backrground from bounding box, this doesn't work
 with TLD as it then interprets any foreground pixels as the target.
 
\end_layout

\begin_layout Itemize
Currently relatively happy with how it functions on one target, need to
 find a way to get the system to add more targets.
\end_layout

\begin_layout Itemize
Tracking component of TLD is the Median Flow algorithm
\end_layout

\begin_layout Itemize
Need to find some way of getting confidence level, seems to be a Featureset
 attribute but currently unable to access this.
\end_layout

\begin_layout Itemize
MultiTracker now works, but the targets are still too similar.
 
\end_layout

\begin_layout Itemize
update() and update_opt() both are not discriminative enough, but update_opt
 is slower.
\end_layout

\begin_layout Itemize
Downloaded a couple of alternative TLD implementations from git.
\end_layout

\begin_layout Itemize
MultiObject TLD implementation from git seems good on initial webcam tests,
 have to try implementing with my thermal videos to see if it is up to the
 task.
 Also need to understand what all of the different boxes around a match
 are, as some appear on incorrect matches but not all.
 Note - the classifier is not loaded from the file name 
\begin_inset Quotes eld
\end_inset

test.moctld
\begin_inset Quotes erd
\end_inset

, they have not yet implemented this functionality.
 
\end_layout

\begin_layout Itemize
Tested MultiObjectTLD implementation with myself as the first target, and
 only that target.
 It is still misidentifying Toby and Greg as me, like the OpenCV implementation,
 but seemed to have fewer of the bounding boxes around them.
\end_layout

\begin_layout Section*

\series bold
Meeting 1
\end_layout

\begin_layout Itemize
Research Machine Learning for Re-ID, use this to write related work section
 of paper (lit review)
\end_layout

\begin_layout Itemize
Ask TLD company about how much a development license would be and if it
 would be suitable (can we extract recognised target)
\end_layout

\begin_layout Itemize
New plan is to apply machine learning to the problem to a greater extent
 than previously.
 
\end_layout

\begin_layout Itemize
Previsionally this will involve an svm per classification of target
\end_layout

\begin_deeper
\begin_layout Itemize
The TLD implementations that I have experimented with is good at tracking
 a target through a camera view, but does not perform re-identification
 well.
 
\end_layout

\begin_layout Itemize
This implementation does have a NearestNeighbour classifier to attempt re-id,
 should probably rewrite this component using a better machine learning
 algorithm, or even just experiment with parameters.
\end_layout

\end_deeper
\begin_layout Section*
Week 1
\end_layout

\begin_layout Itemize
Maybe should investigate openTLD, downloaded and had a play.
\end_layout

\begin_layout Itemize
Tried CMT as well, seems to be a good tracker.
\end_layout

\begin_layout Itemize
Experimented with other OpenCV tracking algorithms, particularly with KCF,
 which seemed capable of decent Re-Identification, ask Toby if evaluating
 multiple algorithms would be a good deliverable.
\end_layout

\begin_layout Itemize
Different Pseudocode idea
\end_layout

\begin_deeper
\begin_layout Itemize
For all targets in image, if any of the svm's have a high enough confidence
 rate then do not create a new target, and update the TLDMultiTracker, which
 should get the right one.
\end_layout

\begin_layout Itemize
If the confidence rates are insufficient, make a new target, add new TLD,
 then update.
\end_layout

\begin_layout Itemize
When displaying the bounding boxes, train the appropriate SVM for the target.
\end_layout

\begin_layout Itemize
Concerns:
\end_layout

\begin_deeper
\begin_layout Itemize
Different targets for the front and back of people, maybe sides as well
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
Got demo from the TLD Vision people, linux version doesn't work at all (doesn't
 recognise keypresses), windows version does work but the tracking is not
 as good as the open source implementations.
\end_layout

\begin_layout Section*
Meeting 2
\end_layout

\begin_layout Itemize
Decided not to do comparison of algorithms as they already exist, have relevent
 webpage open in a tab.
\end_layout

\begin_layout Itemize
Now need to read the relevent papers, recommended by Mendeley, Toby and
 own googling.
\end_layout

\begin_layout Itemize
Need to establish feasibility of online tracking for different of ML algorithms.
\end_layout

\begin_layout Itemize
Shortlist of algorithms/TLD implementations to use as base 
\end_layout

\begin_layout Itemize
Estalish what is going to be extracted from the TLD (or other) to be used
 to train the ML section.
\end_layout

\begin_layout Section*
Week 2
\end_layout

\begin_layout Itemize
Check and see if there is existing dataset of thermal profiles that could
 be used for training purposes.
\end_layout

\begin_layout Itemize
Most papers seem to use supervised learning in the training phase.
\end_layout

\begin_layout Itemize
Got lots of papers in Mendeley to make my way through now :) 
\end_layout

\begin_layout Itemize
Can't test struck in its current form as it runs opencv2
\end_layout

\begin_layout Itemize
Most of the ML papers have complex CNN, need to understand how I could write
 this better.
\end_layout

\begin_layout Itemize
Need to establish how important runtime is to us, and whether any frames
 should be skipped.
\end_layout

\begin_layout Itemize
Possible Algorithms
\end_layout

\begin_deeper
\begin_layout Itemize
MOTLD
\end_layout

\begin_layout Itemize
Struck - need to test with OpenCV 2 - currently hasn't been run
\end_layout

\begin_layout Itemize
OpenTLD - look into how to use this - seems to work well(ish)
\end_layout

\begin_layout Itemize
OpenCV implementations - function but slow
\end_layout

\end_deeper
\begin_layout Section*
Meeting 3
\end_layout

\begin_layout Itemize
New idea - 
\end_layout

\begin_deeper
\begin_layout Itemize
Train a CNN on closed world dataset - this should establish good feature
 vectors for telling people apart at a certain layer
\end_layout

\begin_layout Itemize
Each time we have a new person pass it into the CNN and extract the feature
 vector at a layer determined by experimentation, and use this feature vector
 for re-id
\end_layout

\begin_layout Itemize
Compare feature vector using SVM/Mahalanobis etc.
\end_layout

\end_deeper
\begin_layout Itemize
Papers currently open in browser looking at similar ways of doing this
\end_layout

\begin_layout Itemize
could have ML bit in python and then load it into C++
\end_layout

\begin_layout Itemize
Next - 3 deliverables - read selection of CNN papers (embedded learning),
 decide on suitable tracking algorithm, decide on suitable CNN framework
 - tool - Caffe/tensorflow
\end_layout

\begin_layout Itemize
send Toby my ssh public key so I can access the cameras.
\end_layout

\begin_layout Section*
Week 3
\end_layout

\begin_layout Itemize
This means we are now going to have 2 major discrete components, the tracking
 component and Re-Id component.
\end_layout

\begin_layout Itemize
The Re-ID component will only operate when the Haar cascade has found a
 target that is not currently being tracked
\end_layout

\begin_layout Itemize
Need to ensure that whatever tracking algorithm we choose can handle being
 told which of their targets to be updated
\end_layout

\begin_layout Itemize
Test struck by installing OpenCV2 on Kali box??
\end_layout

\begin_layout Itemize
Thoughts:
\end_layout

\begin_deeper
\begin_layout Itemize
The tracking implementations I am considering make some attempt at Re-ID,
 need to ensure that they do not try and overwrite the CNN component, but
 wait to be told which target a new classification is - is motld the best
 choice for this?
\end_layout

\begin_layout Itemize
Thinking the best solution for testing would be to implement the tracking
 stage first, and have a key press to replace the neural network for now
\end_layout

\begin_layout Itemize
Maybe pass each target through the neural network every 10 classifications
 to ensure we have sufficient data for the Re-ID part (SVM or Mahalanobis)
\end_layout

\begin_layout Itemize
Do I want to extract the silhouette or the whole bounding box?
\end_layout

\begin_layout Itemize
Good idea to make all training images the same size or not?
\end_layout

\end_deeper
\begin_layout Itemize
Keras seems to be a good option, based on either Theano or TensorFlow
\end_layout

\begin_layout Itemize
In terms of the tracking algorithm, need to be able to handle multiple objects,
 but not fight with the Re-ID subsystem.
\end_layout

\begin_deeper
\begin_layout Itemize
CppMT is very clean and fast, but makes a mistake when greg and I cross
 over in the exampel video, so probably should not be used.
\end_layout

\begin_layout Itemize
OpenTLD is slower than CppMT, has decent accuracy, would need to use multiple
 instances of this tracker for multiple objects, also is a very complicated
 library.
\end_layout

\begin_layout Itemize
MoTLD performs well, but tries to Re-ID, would need to research the library
 more.
 
\end_layout

\begin_layout Itemize
Thinking I will implement the tracking stage first, and have each detection
 that would go to the neural network be a new target for now, to ensure
 no interference
\end_layout

\begin_layout Itemize
Probably using MoTLD, as comitting to it will give me more time to study
 how the library works
\end_layout

\end_deeper
\begin_layout Itemize
In terms of neural network to use:
\end_layout

\begin_deeper
\begin_layout Itemize
Many online reviews prefer TensorFlow to Caffe
\end_layout

\begin_layout Itemize
Lots recommend using keras as a wrapper around tensorflow, but this is python
 only
\end_layout

\begin_layout Itemize
What does Toby have experience in, as this seems to be the best way.
\end_layout

\begin_layout Itemize
Don't understand how to design neural networks properly, how to choose number
 and size of layers.
 (experimentation)
\end_layout

\begin_layout Itemize
Suggestion from some papers has been a neural network per image to get features,
 passed into another to tell if the person is the same or different.
\end_layout

\end_deeper
\begin_layout Section*
Meeting 4
\end_layout

\begin_layout Itemize
Let's use MoTLD, try and make it as an abstract class so we could potentially
 switch tracker, then write multi-object tracker class to inherit from this
 and call tracker.
\end_layout

\begin_layout Itemize
Making tracking system work first priority
\end_layout

\begin_layout Itemize
Toby has code on git to convert Mat to IplImage, try and stay as far from
 this old C stuff as possible.
 
\end_layout

\begin_layout Itemize
Siamese neural network seems like the way to go.
 
\end_layout

\begin_layout Itemize
OpenCV DNN can read TensorFlow and Caffe Models, will use this
\end_layout

\begin_layout Itemize
Write abstract class design by next meeting.
\end_layout

\begin_layout Itemize
Vague timing plan by next week
\end_layout

\begin_layout Section*
Week 4
\end_layout

\begin_layout Itemize
Made skeleton in main
\end_layout

\begin_layout Itemize
Did OpenCV reinstall, TLD implementation is now faster but performs terribly,
 so still will not use.
\end_layout

\begin_layout Itemize
Written abstract class with virtual methods, now writing MoTLD version
\end_layout

\begin_layout Itemize
ObjectBox is defined in Matrix.h in MOTLD
\end_layout

\end_body
\end_document
