node {
  name: "input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 256
        }
        dim {
          size: 128
        }
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "conv2d_1/kernel/read"
  op: "Identity"
  input: "conv2d_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/kernel"
      }
    }
  }
}
node {
  name: "conv2d_1/bias/read"
  op: "Identity"
  input: "conv2d_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_1/bias"
      }
    }
  }
}
node {
  name: "conv2d_2/kernel/read"
  op: "Identity"
  input: "conv2d_2/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/kernel"
      }
    }
  }
}
node {
  name: "conv2d_2/bias/read"
  op: "Identity"
  input: "conv2d_2/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_2/bias"
      }
    }
  }
}
node {
  name: "conv2d_3/kernel/read"
  op: "Identity"
  input: "conv2d_3/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/kernel"
      }
    }
  }
}
node {
  name: "conv2d_3/bias/read"
  op: "Identity"
  input: "conv2d_3/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_3/bias"
      }
    }
  }
}
node {
  name: "conv2d_4/kernel/read"
  op: "Identity"
  input: "conv2d_4/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/kernel"
      }
    }
  }
}
node {
  name: "conv2d_4/bias/read"
  op: "Identity"
  input: "conv2d_4/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@conv2d_4/bias"
      }
    }
  }
}
node {
  name: "dense_1/kernel/read"
  op: "Identity"
  input: "dense_1/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/kernel"
      }
    }
  }
}
node {
  name: "dense_1/bias/read"
  op: "Identity"
  input: "dense_1/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@dense_1/bias"
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_1/convolution"
  op: "Conv2D"
  input: "input_1"
  input: "conv2d_1/kernel/read"
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1/conv2d_1/convolution"
  input: "conv2d_1/bias/read"
}
node {
  name: "sequential_1/conv2d_1/Relu"
  op: "Relu"
  input: "sequential_1/conv2d_1/BiasAdd"
}
node {
  name: "sequential_1/conv2d_2/convolution"
  op: "Conv2D"
  input: "sequential_1/conv2d_1/Relu"
  input: "conv2d_2/kernel/read"
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1/conv2d_2/convolution"
  input: "conv2d_2/bias/read"
}
node {
  name: "sequential_1/conv2d_2/Relu"
  op: "Relu"
  input: "sequential_1/conv2d_2/BiasAdd"
}
node {
  name: "sequential_1/max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "sequential_1/conv2d_2/Relu"
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_3/convolution"
  op: "Conv2D"
  input: "sequential_1/max_pooling2d_1/MaxPool"
  input: "conv2d_3/kernel/read"
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1/conv2d_3/convolution"
  input: "conv2d_3/bias/read"
}
node {
  name: "sequential_1/conv2d_3/Relu"
  op: "Relu"
  input: "sequential_1/conv2d_3/BiasAdd"
}
node {
  name: "sequential_1/conv2d_4/convolution"
  op: "Conv2D"
  input: "sequential_1/conv2d_3/Relu"
  input: "conv2d_4/kernel/read"
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1/conv2d_4/convolution"
  input: "conv2d_4/bias/read"
}
node {
  name: "sequential_1/conv2d_4/Relu"
  op: "Relu"
  input: "sequential_1/conv2d_4/BiasAdd"
}
node {
  name: "sequential_1/max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "sequential_1/conv2d_4/Relu"
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1/reshape_1/Reshape"
  op: "Reshape"
  input: "sequential_1/max_pooling2d_2/MaxPool"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential_1/reshape_1/strided_slice"
  op: "StridedSlice"
  input: "sequential_1/reshape_1/Shape"
  input: "sequential_1/reshape_1/strided_slice/stack"
  input: "sequential_1/reshape_1/strided_slice/stack_1"
  input: "sequential_1/reshape_1/strided_slice/stack_2"
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential_1/reshape_1/Reshape/shape"
  op: "Pack"
  input: "sequential_1/reshape_1/strided_slice"
  input: "sequential_1/reshape_1/Reshape/shape/1"
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential_1/reshape_1/Reshape"
  op: "Reshape"
  input: "sequential_1/max_pooling2d_2/MaxPool"
  input: "sequential_1/reshape_1/Reshape/shape"
}
node {
  name: "sequential_1/dense_1/MatMul"
  op: "MatMul"
  input: "sequential_1/reshape_1/Reshape"
  input: "dense_1/kernel/read"
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential_1/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1/dense_1/MatMul"
  input: "dense_1/bias/read"
}
node {
  name: "sequential_1/dense_1/Relu"
  op: "Relu"
  input: "sequential_1/dense_1/BiasAdd"
}
node {
  name: "sequential_1_1/conv2d_1/convolution"
  op: "Conv2D"
  input: "input_2"
  input: "conv2d_1/kernel/read"
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/conv2d_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1_1/conv2d_1/convolution"
  input: "conv2d_1/bias/read"
}
node {
  name: "sequential_1_1/conv2d_1/Relu"
  op: "Relu"
  input: "sequential_1_1/conv2d_1/BiasAdd"
}
node {
  name: "sequential_1_1/conv2d_2/convolution"
  op: "Conv2D"
  input: "sequential_1_1/conv2d_1/Relu"
  input: "conv2d_2/kernel/read"
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/conv2d_2/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1_1/conv2d_2/convolution"
  input: "conv2d_2/bias/read"
}
node {
  name: "sequential_1_1/conv2d_2/Relu"
  op: "Relu"
  input: "sequential_1_1/conv2d_2/BiasAdd"
}
node {
  name: "sequential_1_1/max_pooling2d_1/MaxPool"
  op: "MaxPool"
  input: "sequential_1_1/conv2d_2/Relu"
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/conv2d_3/convolution"
  op: "Conv2D"
  input: "sequential_1_1/max_pooling2d_1/MaxPool"
  input: "conv2d_3/kernel/read"
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/conv2d_3/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1_1/conv2d_3/convolution"
  input: "conv2d_3/bias/read"
}
node {
  name: "sequential_1_1/conv2d_3/Relu"
  op: "Relu"
  input: "sequential_1_1/conv2d_3/BiasAdd"
}
node {
  name: "sequential_1_1/conv2d_4/convolution"
  op: "Conv2D"
  input: "sequential_1_1/conv2d_3/Relu"
  input: "conv2d_4/kernel/read"
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/conv2d_4/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1_1/conv2d_4/convolution"
  input: "conv2d_4/bias/read"
}
node {
  name: "sequential_1_1/conv2d_4/Relu"
  op: "Relu"
  input: "sequential_1_1/conv2d_4/BiasAdd"
}
node {
  name: "sequential_1_1/max_pooling2d_2/MaxPool"
  op: "MaxPool"
  input: "sequential_1_1/conv2d_4/Relu"
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "VALID"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "sequential_1_1/reshape_1/Reshape"
  op: "Reshape"
  input: "sequential_1_1/max_pooling2d_2/MaxPool"
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "sequential_1_1/reshape_1/strided_slice"
  op: "StridedSlice"
  input: "sequential_1_1/reshape_1/Shape"
  input: "sequential_1_1/reshape_1/strided_slice/stack"
  input: "sequential_1_1/reshape_1/strided_slice/stack_1"
  input: "sequential_1_1/reshape_1/strided_slice/stack_2"
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "sequential_1_1/reshape_1/Reshape/shape"
  op: "Pack"
  input: "sequential_1_1/reshape_1/strided_slice"
  input: "sequential_1_1/reshape_1/Reshape/shape/1"
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "sequential_1_1/reshape_1/Reshape"
  op: "Reshape"
  input: "sequential_1_1/max_pooling2d_2/MaxPool"
  input: "sequential_1_1/reshape_1/Reshape/shape"
}
node {
  name: "sequential_1_1/dense_1/MatMul"
  op: "MatMul"
  input: "sequential_1_1/reshape_1/Reshape"
  input: "dense_1/kernel/read"
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "sequential_1_1/dense_1/BiasAdd"
  op: "BiasAdd"
  input: "sequential_1_1/dense_1/MatMul"
  input: "dense_1/bias/read"
}
node {
  name: "sequential_1_1/dense_1/Relu"
  op: "Relu"
  input: "sequential_1_1/dense_1/BiasAdd"
}
node {
  name: "lambda_1/sub"
  op: "Sub"
  input: "sequential_1/dense_1/Relu"
  input: "sequential_1_1/dense_1/Relu"
}
node {
  name: "lambda_1/Square"
  op: "Square"
  input: "lambda_1/sub"
}
node {
  name: "lambda_1/Sum"
  op: "Sum"
  input: "lambda_1/Square"
  input: "lambda_1/Sum/reduction_indices"
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "lambda_1/clip_by_value/Minimum"
  op: "Minimum"
  input: "lambda_1/Sum"
  input: "lambda_1/Const_1"
}
node {
  name: "lambda_1/clip_by_value"
  op: "Maximum"
  input: "lambda_1/clip_by_value/Minimum"
  input: "lambda_1/Const"
}
node {
  name: "lambda_1/Sqrt"
  op: "Sqrt"
  input: "lambda_1/clip_by_value"
}
node {
  name: "output_node0"
  op: "Identity"
  input: "lambda_1/Sqrt"
}
library {
}
